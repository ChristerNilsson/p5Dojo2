// Generated by CoffeeScript 2.4.1
var draw, dst, keyPressed, mousePressed, reset, setup, state, undo;

state = {};

reset = function() {
  return state = {
    r: 0,
    g: 0,
    b: 0,
    size: 256,
    history: [],
    hx: 1
  };
};

dst = (x, y, z) => {
  return Math.sqrt(x * x + y * y + z * z);
};

draw = function() {
  var b, bb, c, g, gg, i, len, r, ref, results, rr, x, y;
  bg(0);
  c = state.size / 4;
  ref = range(4);
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    b = ref[i];
    results.push((function() {
      var j, len1, ref1, results1;
      ref1 = range(4);
      results1 = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        r = ref1[j];
        results1.push((function() {
          var k, len2, ref2, results2;
          ref2 = range(4);
          results2 = [];
          for (k = 0, len2 = ref2.length; k < len2; k++) {
            g = ref2[k];
            rr = state.r + r * c;
            gg = state.g + g * c;
            bb = state.b + b * c;
            fill(rr, gg, bb);
            stroke(rr, gg, bb);
            x = r * 40 - g * 10;
            y = g * 10 + b * 50 + 5;
            quad(4 * (x + 40), 4 * (y + 0), 4 * (x + 80), 4 * (y + 0), 4 * (x + 70), 4 * (y + 10), 4 * (x + 30), 4 * (y + 10));
            noStroke();
            if (dst(rr, gg, bb) < dst(255 - rr, 255 - gg, 255 - bb)) {
              fill(255, 255, 255);
            } else {
              fill(0, 0, 0);
            }
            if (state.hx === 1) {
              results2.push(text(hex(rr, 2) + ' ' + hex(gg, 2) + ' ' + hex(bb, 2), 4 * (x + 48), 4 * (y + 6)));
            } else {
              results2.push(text(rr + ' ' + gg + ' ' + bb, 4 * (x + 48), 4 * (y + 6)));
            }
          }
          return results2;
        })());
      }
      return results1;
    })());
  }
  return results;
};

mousePressed = function(event) {
  var b, g, i, j, k, len, len1, len2, r, ref, ref1, ref2, ref3, ref4, x, y;
  if (state.size === 4) {
    return;
  }
  ref = range(4);
  for (i = 0, len = ref.length; i < len; i++) {
    b = ref[i];
    ref1 = range(4);
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      r = ref1[j];
      ref2 = range(4);
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        g = ref2[k];
        x = r * 40 - g * 10;
        y = g * 10 + b * 50 + 5;
        if ((4 * (x + 35) <= (ref3 = event.x) && ref3 <= 4 * (x + 75)) && (4 * y <= (ref4 = event.y) && ref4 <= 4 * (y + 10))) {
          state.history.push([state.r, state.g, state.b, state.size]);
          state.size /= 4;
          state.r += r * state.size;
          state.g += g * state.size;
          state.b += b * state.size;
          return;
        }
      }
    }
  }
};

keyPressed = function() {
  return state.hx = 1 - state.hx;
};

undo = function() {
  if (state.history.length > 0) {
    return [state.r, state.g, state.b, state.size] = state.history.pop();
  }
};

setup = function() {
  createCanvas(800, 800);
  button('reset', reset);
  button('undo', undo);
  return reset();
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxVQUFBLEVBQUEsWUFBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBOztBQUFBLEtBQUEsR0FBUSxDQUFBOztBQUVSLEtBQUEsR0FBUSxRQUFBLENBQUEsQ0FBQTtTQUFHLEtBQUEsR0FBUTtJQUFBLENBQUEsRUFBRSxDQUFGO0lBQUssQ0FBQSxFQUFFLENBQVA7SUFBVSxDQUFBLEVBQUUsQ0FBWjtJQUFlLElBQUEsRUFBSyxHQUFwQjtJQUF5QixPQUFBLEVBQVEsRUFBakM7SUFBcUMsRUFBQSxFQUFHO0VBQXhDO0FBQVg7O0FBRVIsR0FBQSxHQUFNLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLENBQUEsR0FBQTtTQUFXLElBQUksQ0FBQyxJQUFMLENBQVUsQ0FBQSxHQUFFLENBQUYsR0FBSSxDQUFBLEdBQUUsQ0FBTixHQUFRLENBQUEsR0FBRSxDQUFwQjtBQUFYOztBQUVOLElBQUEsR0FBTyxRQUFBLENBQUEsQ0FBQTtBQUNOLE1BQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLEVBQUEsRUFBQSxDQUFBLEVBQUE7RUFBQSxFQUFBLENBQUcsQ0FBSDtFQUNBLENBQUEsR0FBSSxLQUFLLENBQUMsSUFBTixHQUFhO0FBQ2pCO0FBQUE7RUFBQSxLQUFBLHFDQUFBOzs7O0FBQ0M7QUFBQTtNQUFBLEtBQUEsd0NBQUE7Ozs7QUFDQztBQUFBO1VBQUEsS0FBQSx3Q0FBQTs7WUFDQyxFQUFBLEdBQUssS0FBSyxDQUFDLENBQU4sR0FBUSxDQUFBLEdBQUU7WUFDZixFQUFBLEdBQUssS0FBSyxDQUFD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QUFBLENBQUE7QUFKTyIsInNvdXJjZXNDb250ZW50IjpbInN0YXRlID0ge31cclxuXHJcbnJlc2V0ID0gLT4gc3RhdGUgPSByOjAsIGc6MCwgYjowLCBzaXplOjI1NiwgaGlzdG9yeTpbXSwgaHg6MVxyXG5cclxuZHN0ID0gKHgseSx6KSA9PiBNYXRoLnNxcnQoeCp4K3kqeSt6KnopXHJcblxyXG5kcmF3ID0gLT5cclxuXHRiZyAwXHJcblx0YyA9IHN0YXRlLnNpemUgLyA0XHJcblx0Zm9yIGIgaW4gcmFuZ2UgNFxyXG5cdFx0Zm9yIHIgaW4gcmFuZ2UgNFxyXG5cdFx0XHRmb3IgZyBpbiByYW5nZSA0XHJcblx0XHRcdFx0cnIgPSBzdGF0ZS5yK3IqY1xyXG5cdFx0XHRcdGdnID0gc3RhdGUuZytnKmNcclxuXHRcdFx0XHRiYiA9IHN0YXRlLmIrYipjXHJcblx0XHRcdFx0ZmlsbCAgIHJyLGdnLGJiXHJcblx0XHRcdFx0c3Ryb2tlIHJyLGdnLGJiXHJcblx0XHRcdFx0eCA9IHIqNDAtZyoxMFxyXG5cdFx0XHRcdHkgPSBnKjEwK2IqNTAgKyA1XHJcblx0XHRcdFx0cXVhZCA0Kih4KzQwKSw0Kih5KzApLCA0Kih4KzgwKSw0Kih5KzApLCA0Kih4KzcwKSw0Kih5KzEwKSwgNCooeCszMCksNCooeSsxMClcclxuXHRcdFx0XHRub1N0cm9rZSgpXHJcblx0XHRcdFx0aWYgZHN0KHJyLGdnLGJiKSA8IGRzdCgyNTUtcnIsMjU1LWdnLDI1NS1iYikgdGhlbiBmaWxsIDI1NSwyNTUsMjU1IGVsc2UgZmlsbCAwLDAsMFxyXG5cdFx0XHRcdGlmIHN0YXRlLmh4ID09IDFcclxuXHRcdFx0XHRcdHRleHQgaGV4KHJyLDIpICsgJyAnICsgaGV4KGdnLDIpICsgJyAnICsgaGV4KGJiLDIpLCA0Kih4KzQ4KSwgNCooeSs2KVxyXG5cdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdHRleHQgcnIgKyAnICcgKyBnZyArICcgJyArIGJiLCA0Kih4KzQ4KSwgNCooeSs2KVxyXG5cclxubW91c2VQcmVzc2VkID0gKGV2ZW50KSAtPlxyXG5cdGlmIHN0YXRlLnNpemUgPT0gNCB0aGVuIHJldHVyblxyXG5cdGZvciBiIGluIHJhbmdlIDRcclxuXHRcdGZvciByIGluIHJhbmdlIDRcclxuXHRcdFx0Zm9yIGcgaW4gcmFuZ2UgNFxyXG5cdFx0XHRcdHggPSByKjQwLWcqMTBcclxuXHRcdFx0XHR5ID0gZyoxMCtiKjUwICsgNVxyXG5cdFx0XHRcdGlmIDQqKHgrMzUpIDw9IGV2ZW50LnggPD0gNCooeCs3NSkgYW5kIDQqKHkpIDw9IGV2ZW50LnkgPD0gNCooeSsxMClcclxuXHRcdFx0XHRcdHN0YXRlLmhpc3RvcnkucHVzaCBbc3RhdGUucixzdGF0ZS5nLHN0YXRlLmIsc3RhdGUuc2l6ZV1cclxuXHRcdFx0XHRcdHN0YXRlLnNpemUgLz0gNFxyXG5cdFx0XHRcdFx0c3RhdGUuciArPSByICogc3RhdGUuc2l6ZVxyXG5cdFx0XHRcdFx0c3RhdGUuZyArPSBnICogc3RhdGUuc2l6ZVxyXG5cdFx0XHRcdFx0c3RhdGUuYiArPSBiICogc3RhdGUuc2l6ZVxyXG5cdFx0XHRcdFx0cmV0dXJuXHJcblxyXG5rZXlQcmVzc2VkID0gLT4gc3RhdGUuaHggPSAxIC0gc3RhdGUuaHhcclxuXHJcbnVuZG8gPSAtPiBpZiBzdGF0ZS5oaXN0b3J5Lmxlbmd0aCA+IDAgdGhlbiBbc3RhdGUucixzdGF0ZS5nLHN0YXRlLmIsc3RhdGUuc2l6ZV0gPSBzdGF0ZS5oaXN0b3J5LnBvcCgpXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIDgwMCw4MDBcclxuXHRidXR0b24gJ3Jlc2V0JywgcmVzZXRcclxuXHRidXR0b24gJ3VuZG8nLCB1bmRvXHJcblx0cmVzZXQoKVxyXG4iXX0=
//# sourceURL=c:\github\p5Dojo2\ID_ColorCube\coffee\sketch.coffee