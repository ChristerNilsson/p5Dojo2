// Generated by CoffeeScript 2.4.1
var draw, mousePressed, reset, setup, state, undo;

state = {};

reset = function() {
  return state = {
    r: 0,
    g: 0,
    b: 0,
    size: 256,
    history: []
  };
};

draw = function() {
  var b, c, g, i, len, r, ref, results, x, y;
  bg(0);
  c = state.size / 4;
  ref = range(4);
  results = [];
  for (i = 0, len = ref.length; i < len; i++) {
    b = ref[i];
    results.push((function() {
      var j, len1, ref1, results1;
      ref1 = range(4);
      results1 = [];
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        r = ref1[j];
        results1.push((function() {
          var k, len2, ref2, results2;
          ref2 = range(4);
          results2 = [];
          for (k = 0, len2 = ref2.length; k < len2; k++) {
            g = ref2[k];
            fill(state.r + r * c + c / 2, state.g + g * c + c / 2, state.b + b * c + c / 2);
            stroke(state.r + r * c + c / 2, state.g + g * c + c / 2, state.b + b * c + c / 2);
            x = r * 40 - g * 10;
            y = g * 10 + b * 50 + 5;
            results2.push(quad(4 * (x + 40), 4 * (y + 0), 4 * (x + 80), 4 * (y + 0), 4 * (x + 70), 4 * (y + 10), 4 * (x + 30), 4 * (y + 10)));
          }
          return results2;
        })());
      }
      return results1;
    })());
  }
  return results;
};

mousePressed = function(event) {
  var b, g, i, j, k, len, len1, len2, r, ref, ref1, ref2, ref3, ref4, x, y;
  if (state.size === 4) {
    return;
  }
  ref = range(4);
  for (i = 0, len = ref.length; i < len; i++) {
    b = ref[i];
    ref1 = range(4);
    for (j = 0, len1 = ref1.length; j < len1; j++) {
      r = ref1[j];
      ref2 = range(4);
      for (k = 0, len2 = ref2.length; k < len2; k++) {
        g = ref2[k];
        x = r * 40 - g * 10;
        y = g * 10 + b * 50 + 5;
        if ((4 * (x + 35) <= (ref3 = event.x) && ref3 <= 4 * (x + 75)) && (4 * y <= (ref4 = event.y) && ref4 <= 4 * (y + 10))) {
          state.history.push([state.r, state.g, state.b, state.size]);
          state.size /= 4;
          state.r += r * state.size;
          state.g += g * state.size;
          state.b += b * state.size;
          return;
        }
      }
    }
  }
};

undo = function() {
  if (state.history.length > 0) {
    return [state.r, state.g, state.b, state.size] = state.history.pop();
  }
};

setup = function() {
  createCanvas(800, 800);
  button('reset', reset);
  button('undo', undo);
  return reset();
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLFlBQUEsRUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQTs7QUFBQSxLQUFBLEdBQVEsQ0FBQTs7QUFFUixLQUFBLEdBQVEsUUFBQSxDQUFBLENBQUE7U0FBRyxLQUFBLEdBQVE7SUFBQSxDQUFBLEVBQUUsQ0FBRjtJQUFLLENBQUEsRUFBRSxDQUFQO0lBQVUsQ0FBQSxFQUFFLENBQVo7SUFBZSxJQUFBLEVBQUssR0FBcEI7SUFBeUIsT0FBQSxFQUFRO0VBQWpDO0FBQVg7O0FBRVIsSUFBQSxHQUFPLFFBQUEsQ0FBQSxDQUFBO0FBQ04sTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBLENBQUEsRUFBQTtFQUFBLEVBQUEsQ0FBRyxDQUFIO0VBQ0EsQ0FBQSxHQUFJLEtBQUssQ0FBQyxJQUFOLEdBQWE7QUFDakI7QUFBQTtFQUFBLEtBQUEscUNBQUE7Ozs7QUFDQztBQUFBO01BQUEsS0FBQSx3Q0FBQTs7OztBQUNDO0FBQUE7VUFBQSxLQUFBLHdDQUFBOztZQUNDLElBQUEsQ0FBTyxLQUFLLENBQUMsQ0FBTixHQUFRLENBQUEsR0FBRSxDQUFWLEdBQVksQ0FBQSxHQUFFLENBQXJCLEVBQXdCLEtBQUssQ0FBQyxDQUFOLEdBQVEsQ0FBQSxHQUFFLENBQVYsR0FBWSxDQUFBLEdBQUUsQ0FBdEMsRUFBeUMsS0FBSyxDQUFDLENBQU4sR0FBUSxDQUFBLEdBQUUsQ0FBVixHQUFZLENBQUEsR0FBRSxDQUF2RDtZQUNBLE1BQUEsQ0FBTyxLQUFLLENBQUMsQ0FBTixHQUFRLENBQUEsR0FBRSxDQUFWLEdBQVksQ0FBQSxHQUFFLENBQXJCLEVBQXdCLEtBQUssQ0FBQyxD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QUNQLFlBQUEsQ0FBYSxHQUFiLEVBQWlCLEdBQWpCO0VBQ0EsTUFBQSxDQUFPLE9BQVAsRUFBZ0IsS0FBaEI7RUFDQSxNQUFBLENBQU8sTUFBUCxFQUFlLElBQWY7U0FDQSxLQUFBLENBQUE7QUFKTyIsInNvdXJjZXNDb250ZW50IjpbInN0YXRlID0ge31cclxuXHJcbnJlc2V0ID0gLT4gc3RhdGUgPSByOjAsIGc6MCwgYjowLCBzaXplOjI1NiwgaGlzdG9yeTpbXVxyXG5cclxuZHJhdyA9IC0+XHJcblx0YmcgMFxyXG5cdGMgPSBzdGF0ZS5zaXplIC8gNFxyXG5cdGZvciBiIGluIHJhbmdlIDRcclxuXHRcdGZvciByIGluIHJhbmdlIDRcclxuXHRcdFx0Zm9yIGcgaW4gcmFuZ2UgNFxyXG5cdFx0XHRcdGZpbGwgICBzdGF0ZS5yK3IqYytjLzIsIHN0YXRlLmcrZypjK2MvMiwgc3RhdGUuYitiKmMrYy8yXHJcblx0XHRcdFx0c3Ryb2tlIHN0YXRlLnIrcipjK2MvMiwgc3RhdGUuZytnKmMrYy8yLCBzdGF0ZS5iK2IqYytjLzJcclxuXHRcdFx0XHR4ID0gcio0MC1nKjEwXHJcblx0XHRcdFx0eSA9IGcqMTArYio1MCArIDVcclxuXHRcdFx0XHRxdWFkIDQqKHgrNDApLDQqKHkrMCksIDQqKHgrODApLDQqKHkrMCksIDQqKHgrNzApLDQqKHkrMTApLCA0Kih4KzMwKSw0Kih5KzEwKVxyXG5cclxubW91c2VQcmVzc2VkID0gKGV2ZW50KSAtPlxyXG5cdGlmIHN0YXRlLnNpemUgPT0gNCB0aGVuIHJldHVyblxyXG5cdGZvciBiIGluIHJhbmdlIDRcclxuXHRcdGZvciByIGluIHJhbmdlIDRcclxuXHRcdFx0Zm9yIGcgaW4gcmFuZ2UgNFxyXG5cdFx0XHRcdHggPSByKjQwLWcqMTBcclxuXHRcdFx0XHR5ID0gZyoxMCtiKjUwICsgNVxyXG5cdFx0XHRcdGlmIDQqKHgrMzUpIDw9IGV2ZW50LnggPD0gNCooeCs3NSkgYW5kIDQqKHkpIDw9IGV2ZW50LnkgPD0gNCooeSsxMClcclxuXHRcdFx0XHRcdHN0YXRlLmhpc3RvcnkucHVzaCBbc3RhdGUucixzdGF0ZS5nLHN0YXRlLmIsc3RhdGUuc2l6ZV1cclxuXHRcdFx0XHRcdHN0YXRlLnNpemUgLz0gNFxyXG5cdFx0XHRcdFx0c3RhdGUuciArPSByICogc3RhdGUuc2l6ZVxyXG5cdFx0XHRcdFx0c3RhdGUuZyArPSBnICogc3RhdGUuc2l6ZVxyXG5cdFx0XHRcdFx0c3RhdGUuYiArPSBiICogc3RhdGUuc2l6ZVxyXG5cdFx0XHRcdFx0cmV0dXJuXHJcblxyXG51bmRvID0gLT4gaWYgc3RhdGUuaGlzdG9yeS5sZW5ndGggPiAwIHRoZW4gW3N0YXRlLnIsc3RhdGUuZyxzdGF0ZS5iLHN0YXRlLnNpemVdID0gc3RhdGUuaGlzdG9yeS5wb3AoKVxyXG5cclxuc2V0dXAgPSAtPlxyXG5cdGNyZWF0ZUNhbnZhcyA4MDAsODAwXHJcblx0YnV0dG9uICdyZXNldCcsIHJlc2V0XHJcblx0YnV0dG9uICd1bmRvJywgdW5kb1xyXG5cdHJlc2V0KClcclxuIl19
//# sourceURL=c:\github\p5Dojo2\ID_ColorCube\coffee\sketch.coffee