// Generated by CoffeeScript 2.4.1
var MineSweeper, app, draw, mousePressed, setup,
  indexOf = [].indexOf;

app = null;

MineSweeper = class MineSweeper {
  reset(w, totalBombs) {
    this.w = w;
    this.n = int(200 / this.w);
    this.newGame(totalBombs);
    return this.flags = [];
  }

  newGame(totalBombs) {
    var i;
    this.state = 0;
    this.revealed = [];
    return this.bombs = (function() {
      var k, len, ref, results;
      ref = range(totalBombs);
      results = [];
      for (k = 0, len = ref.length; k < len; k++) {
        i = ref[k];
        results.push(_.random(this.n * this.n));
      }
      return results;
    }).call(this);
  }

  neighborCount(i0, j0) {
    var di, dj, i, j, k, l, len, len1, ref, ref1, ref2, total;
    total = 0;
    ref = [-1, 0, 1];
    for (k = 0, len = ref.length; k < len; k++) {
      di = ref[k];
      ref1 = [-1, 0, 1];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        dj = ref1[l];
        [i, j] = [i0 + di, j0 + dj];
        if ((-1 < i && i < this.n) && (-1 < j && j < this.n)) {
          if (ref2 = this.n * j + i, indexOf.call(this.bombs, ref2) >= 0) {
            total++;
          }
        }
      }
    }
    return total;
  }

  draw() {
    var i, index, j, k, len, nc, ref, results, x, y;
    textAlign(CENTER, CENTER);
    textSize(this.w);
    rectMode(CENTER);
    ref = range(this.n);
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      i = ref[k];
      results.push((function() {
        var l, len1, ref1, results1;
        ref1 = range(this.n);
        results1 = [];
        for (l = 0, len1 = ref1.length; l < len1; l++) {
          j = ref1[l];
          index = this.n * j + i;
          [x, y] = [this.w * i + this.w / 2, this.w * j + this.w / 2];
          if (indexOf.call(this.flags, index) >= 0) {
            fc(1, 0, 0);
            results1.push(text('F', x, y + 2));
          } else {
            sc(0);
            fc(0.5);
            rect(x, y, this.w, this.w);
            if (this.state === 1 || indexOf.call(this.revealed, index) >= 0) {
              fc(0);
              if (indexOf.call(this.bombs, index) >= 0) {
                results1.push(circle(x, y, this.w * 0.25));
              } else {
                fc(0.75);
                rect(x, y, this.w, this.w);
                nc = this.neighborCount(i, j);
                sc();
                fill('#000 #f00 #0f0 #00f #ff0 #f0f #0ff #fff'.split(' ')[nc]);
                if (nc > 0) {
                  results1.push(text(nc, x + 1, y + 1));
                } else {
                  results1.push(void 0);
                }
              }
            } else {
              results1.push(void 0);
            }
          }
        }
        return results1;
      }).call(this));
    }
    return results;
  }

  mousePressed(mx, my) {
    var i, index, j;
    i = int(mx / this.w);
    j = int(my / this.w);
    index = this.n * j + i;
    if (keyIsPressed) {
      this.toggleFlag(index);
      return;
    }
    if (this.state === 1) {
      return this.newGame(this.bombs.length);
    } else {
      if (indexOf.call(this.bombs, index) >= 0) {
        return this.state = 1;
      } else {
        return this.reveal(i, j);
      }
    }
  }

  toggleFlag(index) {
    console.log(index);
    if (indexOf.call(this.flags, index) >= 0) {
      return this.flags = _.without(this.flags, index);
    } else {
      return this.flags.push(index);
    }
  }

  reveal(i, j) {
    this.revealed.push(this.n * j + i);
    if (this.neighborCount(i, j) === 0) {
      return this.floodFill(i, j);
    }
  }

  floodFill(i0, j0) {
    var di, dj, i, index, j, k, len, ref, results;
    ref = [-1, 0, 1];
    results = [];
    for (k = 0, len = ref.length; k < len; k++) {
      di = ref[k];
      results.push((function() {
        var l, len1, ref1, results1;
        ref1 = [-1, 0, 1];
        results1 = [];
        for (l = 0, len1 = ref1.length; l < len1; l++) {
          dj = ref1[l];
          i = i0 + di;
          j = j0 + dj;
          if ((-1 < i && i < this.n) && (-1 < j && j < this.n)) {
            index = this.n * j + i;
            if (!(indexOf.call(this.bombs, index) >= 0 || indexOf.call(this.revealed, index) >= 0)) {
              results1.push(this.reveal(i, j));
            } else {
              results1.push(void 0);
            }
          } else {
            results1.push(void 0);
          }
        }
        return results1;
      }).call(this));
    }
    return results;
  }

};

setup = function() {
  createCanvas(200, 200);
  app = new MineSweeper;
  button('reset 20,10', () => {
    return app.reset(20, 10);
  });
  button('reset 20,20', () => {
    return app.reset(20, 20);
  });
  button('reset 20,30', () => {
    return app.reset(20, 30);
  });
  button('reset 10,40', () => {
    return app.reset(10, 40);
  });
  return app.reset(20, 10);
};

draw = function() {
  return app.draw();
};

mousePressed = function(event) {
  return app.mousePressed(event.x, event.y);
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\p5Dojo2\ID_MineSweeper\coffee\sketch.coffee