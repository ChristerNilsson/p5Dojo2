// Generated by CoffeeScript 2.4.1
var count, draw, mousePressed, reset, setup, state, tick,
  modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

state = {};

reset = function(n) {
  var i, j, k, len, ref, results;
  state.n = n;
  state.size = 200 / state.n;
  state.matrix = {};
  state.ticks = 0;
  ref = [[0, 0], [2, 0], [1, 1], [2, 1], [1, 2]];
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    [i, j] = ref[k];
    results.push(state.matrix[i + ',' + j] = 1);
  }
  return results;
};

draw = function() {
  var i, j, k, len, ref, results;
  bg(0.5);
  ref = range(state.n);
  results = [];
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    results.push((function() {
      var l, len1, ref1, results1;
      ref1 = range(state.n);
      results1 = [];
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        j = ref1[l];
        if (state.matrix[i + ',' + j] === 1) {
          results1.push(rect(state.size * i, state.size * j, state.size, state.size));
        } else {
          results1.push(void 0);
        }
      }
      return results1;
    })());
  }
  return results;
};

count = function(x, y) {
  var dx, dy, i, j, k, l, len, len1, ref, ref1, res;
  res = 0;
  ref = [-1, 0, 1];
  for (k = 0, len = ref.length; k < len; k++) {
    dx = ref[k];
    ref1 = [-1, 0, 1];
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      dy = ref1[l];
      i = modulo(x + dx, state.n);
      j = modulo(y + dy, state.n);
      if (state.matrix[i + ',' + j] === 1 && (dx !== 0 || dy !== 0)) {
        res++;
      }
    }
  }
  return res;
};

tick = function() {
  var c, i, j, k, key, l, len, len1, m, ref, ref1;
  state.ticks++;
  m = {};
  ref = range(state.n);
  for (k = 0, len = ref.length; k < len; k++) {
    i = ref[k];
    ref1 = range(state.n);
    for (l = 0, len1 = ref1.length; l < len1; l++) {
      j = ref1[l];
      c = count(i, j);
      key = i + ',' + j;
      if (state.matrix[key] === 1) {
        if ((2 <= c && c <= 3)) {
          m[key] = 1;
        }
      } else {
        if (c === 3) {
          m[key] = 1;
        }
      }
    }
  }
  return state.matrix = m;
};

mousePressed = function(event) {
  var i, j, key;
  i = int(event.x / state.size);
  j = int(event.y / state.size);
  key = i + ',' + j;
  if (state.matrix[key]) {
    return state.matrix[key] = void 0;
  } else {
    return state.matrix[key] = 1;
  }
};

setup = function() {
  createCanvas(200, 200);
  button('reset 10', () => {
    return reset(10);
  });
  button('reset 20', () => {
    return reset(20);
  });
  button('reset 40', () => {
    return reset(40);
  });
  return button('tick', tick);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWVcXHNrZXRjaC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsS0FBQSxFQUFBLElBQUEsRUFBQSxZQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUEsSUFBQTtFQUFBOztBQUFBLEtBQUEsR0FBUSxDQUFBOztBQUVSLEtBQUEsR0FBUSxRQUFBLENBQUMsQ0FBRCxDQUFBO0FBQ1AsTUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsR0FBQSxFQUFBO0VBQUEsS0FBSyxDQUFDLENBQU4sR0FBVTtFQUNWLEtBQUssQ0FBQyxJQUFOLEdBQWEsR0FBQSxHQUFJLEtBQUssQ0FBQztFQUN2QixLQUFLLENBQUMsTUFBTixHQUFlLENBQUE7RUFDZixLQUFLLENBQUMsS0FBTixHQUFjO0FBQ2Q7QUFBQTtFQUFBLEtBQUEscUNBQUE7SUFBSSxDQUFDLENBQUQsRUFBRyxDQUFIO2lCQUNILEtBQUssQ0FBQyxNQUFPLENBQUEsQ0FBQSxHQUFFLEdBQUYsR0FBTSxDQUFOLENBQWIsR0FBd0I7RUFEekIsQ0FBQTs7QUFMTzs7QUFRUixJQUFBLEdBQU8sUUFBQSxDQUFBLENBQUE7QUFDTixNQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQSxFQUFBLENBQUcsR0FBSDtBQUNBO0FBQUE7RUFBQSxLQUFBLHFDQUFBOzs7O0FBQ0M7QUFBQTtNQUFBLEtBQUEsd0NBQUE7O1FBQ0MsSUFBRyxLQUFLLENBQUMsTUFBTyxDQUFBLENBQUEsR0FBRSxHQUFGLEdBQU0sQ0FBTixDQUFiLEtBQXVCLENBQTFCO3dCQUNDLElBQUEsQ0FBSyxLQUFLLENBQUMsSUFBTixHQUFXLENBQWhCLEVBQW1CLEtBQUssQ0FBQyxJQUFOLEdBQVcsQ0FBOUIsRUFBaUMsS0FBSyxDQUFDLElBQXZDLEVB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InN0YXRlID0ge31cclxuXHJcbnJlc2V0ID0gKG4pIC0+XHJcblx0c3RhdGUubiA9IG5cclxuXHRzdGF0ZS5zaXplID0gMjAwL3N0YXRlLm5cclxuXHRzdGF0ZS5tYXRyaXggPSB7fVxyXG5cdHN0YXRlLnRpY2tzID0gMFxyXG5cdGZvciBbaSxqXSBpbiBbWzAsMF0sWzIsMF0sWzEsMV0sWzIsMV0sWzEsMl1dXHJcblx0XHRzdGF0ZS5tYXRyaXhbaSsnLCcral0gPSAxXHJcblxyXG5kcmF3ID0gLT5cclxuXHRiZyAwLjVcclxuXHRmb3IgaSBpbiByYW5nZSBzdGF0ZS5uXHJcblx0XHRmb3IgaiBpbiByYW5nZSBzdGF0ZS5uXHJcblx0XHRcdGlmIHN0YXRlLm1hdHJpeFtpKycsJytqXT09MVxyXG5cdFx0XHRcdHJlY3Qgc3RhdGUuc2l6ZSppLCBzdGF0ZS5zaXplKmosIHN0YXRlLnNpemUsIHN0YXRlLnNpemVcclxuXHJcbmNvdW50ID0gKHgseSkgLT5cclxuXHRyZXMgPSAwXHJcblx0Zm9yIGR4IGluIFstMSwwLDFdXHJcblx0XHRmb3IgZHkgaW4gWy0xLDAsMV1cclxuXHRcdFx0aSA9ICh4K2R4KSAlJSBzdGF0ZS5uXHJcblx0XHRcdGogPSAoeStkeSkgJSUgc3RhdGUublxyXG5cdFx0XHRyZXMrKyBpZiBzdGF0ZS5tYXRyaXhbaSsnLCcral09PTEgYW5kIChkeCE9MCBvciBkeSE9MClcclxuXHRyZXNcclxuXHJcbnRpY2sgPSAtPlxyXG5cdHN0YXRlLnRpY2tzKytcclxuXHRtID0ge31cclxuXHRmb3IgaSBpbiByYW5nZSBzdGF0ZS5uXHJcblx0XHRmb3IgaiBpbiByYW5nZSBzdGF0ZS5uXHJcblx0XHRcdGMgPSBjb3VudChpLGopXHJcblx0XHRcdGtleSA9IGkrJywnK2pcclxuXHRcdFx0aWYgc3RhdGUubWF0cml4W2tleV0gPT0gMVxyXG5cdFx0XHRcdGlmIDIgPD0gYyA8PSAzIHRoZW4gbVtrZXldPTFcclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdGlmIGM9PTMgdGhlbiBtW2tleV09MVxyXG5cdHN0YXRlLm1hdHJpeCA9IG1cclxuXHJcbm1vdXNlUHJlc3NlZCA9IChldmVudCkgLT5cclxuXHRpID0gaW50IGV2ZW50Lngvc3RhdGUuc2l6ZVxyXG5cdGogPSBpbnQgZXZlbnQueS9zdGF0ZS5zaXplXHJcblx0a2V5ID0gaSsnLCcralxyXG5cdGlmIHN0YXRlLm1hdHJpeFtrZXldIFxyXG5cdFx0c3RhdGUubWF0cml4W2tleV0gPSB1bmRlZmluZWQgXHJcblx0ZWxzZVxyXG5cdFx0c3RhdGUubWF0cml4W2tleV0gPSAxXHJcblxyXG5zZXR1cCA9IC0+XHJcblx0Y3JlYXRlQ2FudmFzIDIwMCwyMDBcclxuXHRidXR0b24gJ3Jlc2V0IDEwJywoKT0+cmVzZXQgMTBcclxuXHRidXR0b24gJ3Jlc2V0IDIwJywoKT0+cmVzZXQgMjBcclxuXHRidXR0b24gJ3Jlc2V0IDQwJywoKT0+cmVzZXQgNDBcclxuXHRidXR0b24gJ3RpY2snLHRpY2tcclxuIl19
//# sourceURL=c:\github\p5Dojo2\ID_GameOfLife\coffee\sketch.coffee